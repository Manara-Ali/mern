{"ast":null,"code":"import * as usersAPI from \"./users-api\";\nimport axios from \"axios\";\nexport async function signUp(userData) {\n  // Make the network request\n  const response = await usersAPI.signUp(userData);\n\n  // Retrieve the token\n  const token = response.data.token;\n\n  // Add the token to the localstorage\n  localStorage.setItem(\"token\", token);\n\n  // Baby step by returning whatever is sent back by the server\n  return response;\n}\n\n// Create a function to retrieve jwt from local storage\nexport const getToken = () => {\n  // Reach out to local storage and look for a token\n  const token = localStorage.getItem(\"token\");\n\n  // Assuming no token was found\n  if (!token) return null;\n\n  // If the function reaches this point of the code that mean a token was found\n  const payload = JSON.parse(atob(token.split(\".\")[1]));\n\n  // Verify that the decoded payload is not expired\n  if (payload.exp < Number.parseInt(Date.now() / 1000)) {\n    // Meaning the jwt has expired\n    localStorage.removeItem(\"token\");\n\n    // return early\n    return null;\n  }\n\n  // Again if the code gets to this line it means that there was a token and the token was valid\n  return token;\n};\n\n// Create a function to retrieve the user\nexport const getUser = async () => {\n  // Call the getToken function to retrieve the jwt from localstorage\n  const token = getToken();\n\n  // Retrieve the user ID from the payload\n  const userId = JSON.parse(atob(token.split(\".\")[1])).id;\n\n  // Retrieve the user from our database\n  const user = await axios({\n    method: \"GET\",\n    url: `/api/v1/users/${userId}`\n  });\n  console.log(user);\n};","map":{"version":3,"names":["usersAPI","axios","signUp","userData","response","token","data","localStorage","setItem","getToken","getItem","payload","JSON","parse","atob","split","exp","Number","parseInt","Date","now","removeItem","getUser","userId","id","user","method","url","console","log"],"sources":["/Users/manaraali/Desktop/mern_app/frontend/src/utilities/users-service.js"],"sourcesContent":["import * as usersAPI from \"./users-api\";\nimport axios from \"axios\";\n\nexport async function signUp(userData) {\n  // Make the network request\n  const response = await usersAPI.signUp(userData);\n\n  // Retrieve the token\n  const token = response.data.token;\n\n  // Add the token to the localstorage\n  localStorage.setItem(\"token\", token);\n\n  // Baby step by returning whatever is sent back by the server\n  return response;\n}\n\n// Create a function to retrieve jwt from local storage\nexport const getToken = () => {\n  // Reach out to local storage and look for a token\n  const token = localStorage.getItem(\"token\");\n\n  // Assuming no token was found\n  if (!token) return null;\n\n  // If the function reaches this point of the code that mean a token was found\n  const payload = JSON.parse(atob(token.split(\".\")[1]));\n\n  // Verify that the decoded payload is not expired\n  if (payload.exp < Number.parseInt(Date.now() / 1000)) {\n    // Meaning the jwt has expired\n    localStorage.removeItem(\"token\");\n\n    // return early\n    return null;\n  }\n\n  // Again if the code gets to this line it means that there was a token and the token was valid\n  return token;\n};\n\n// Create a function to retrieve the user\nexport const getUser = async () => {\n  // Call the getToken function to retrieve the jwt from localstorage\n  const token = getToken();\n\n  // Retrieve the user ID from the payload\n  const userId = JSON.parse(atob(token.split(\".\")[1])).id;\n\n  // Retrieve the user from our database\n  const user = await axios({\n    method: \"GET\",\n    url: `/api/v1/users/${userId}`,\n  });\n\n  console.log(user);\n};\n"],"mappings":"AAAA,OAAO,KAAKA,QAAQ,MAAM,aAAa;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,eAAeC,MAAM,CAACC,QAAQ,EAAE;EACrC;EACA,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACE,MAAM,CAACC,QAAQ,CAAC;;EAEhD;EACA,MAAME,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACD,KAAK;;EAEjC;EACAE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;;EAEpC;EACA,OAAOD,QAAQ;AACjB;;AAEA;AACA,OAAO,MAAMK,QAAQ,GAAG,MAAM;EAC5B;EACA,MAAMJ,KAAK,GAAGE,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;;EAE3C;EACA,IAAI,CAACL,KAAK,EAAE,OAAO,IAAI;;EAEvB;EACA,MAAMM,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACT,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAErD;EACA,IAAIJ,OAAO,CAACK,GAAG,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE;IACpD;IACAb,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;;IAEhC;IACA,OAAO,IAAI;EACb;;EAEA;EACA,OAAOhB,KAAK;AACd,CAAC;;AAED;AACA,OAAO,MAAMiB,OAAO,GAAG,YAAY;EACjC;EACA,MAAMjB,KAAK,GAAGI,QAAQ,EAAE;;EAExB;EACA,MAAMc,MAAM,GAAGX,IAAI,CAACC,KAAK,CAACC,IAAI,CAACT,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACS,EAAE;;EAEvD;EACA,MAAMC,IAAI,GAAG,MAAMxB,KAAK,CAAC;IACvByB,MAAM,EAAE,KAAK;IACbC,GAAG,EAAG,iBAAgBJ,MAAO;EAC/B,CAAC,CAAC;EAEFK,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;AACnB,CAAC"},"metadata":{},"sourceType":"module"}